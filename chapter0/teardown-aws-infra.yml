---
  - name: Delete AWS EC2 infrastructure for RH294 course
    hosts: localhost
    vars_files: vars/aws.example.yml
    tasks:

      - name: Gather EC2 facts
        ec2_instance_info:
          region: "{{ aws_region }}"
          filters:
            "tag:namespace": "{{ ec2_key_name }}"
        register: ec2_facts

      # - debug: msg="{{  ec2_facts.instances }}"

#---------------------------------------------------
# Workstation EC2 instace
#---------------------------------------------------

      - name: Disassociate workstation elastic IP
        ec2_eip:
          device_id: "{{ item.instance_id }}"
          ip: "{{ item.public_ip_address }}"
          region: "{{ aws_region }}"
          state: absent
          release_on_disassociation: yes
        with_items: "{{ ec2_facts.instances }}"
        when: ((item is defined) and (item.tags.Name == ec2_key_name ~ '-workstation') and (item.state != 'terminated') and (item.public_ip_address is defined))

      - name: Terminate EC2 VMs
        ec2:
          state: absent
          region: "{{ aws_region }}"
          instance_ids: "{{ item.instance_id }}"
          wait: yes
        with_items: "{{ ec2_facts.instances }}"
        when: item.state != 'terminated'

#---------------------------------------------------
# Security Groups
#---------------------------------------------------

      - name: Delete vpc security group
        ec2_group:
          name: "{{ ec2_security_group }}"
          region: "{{ aws_region }}"
          state: "absent"

      - name: Delete ingress security group
        ec2_group:
          name: "{{ ec2_security_group_ingress }}"
          region: "{{ aws_region }}"
          state: "absent"

      - name: Delete egress security group
        ec2_group:
          name: "{{ ec2_security_group_egress }}"
          region: "{{ aws_region }}"
          state: "absent"

      - name: Delete ssh security group
        ec2_group:
          name: "{{ ec2_security_group_ssh }}"
          region: "{{ aws_region }}"
          state: "absent"

#---------------------------------------------------
# VPC
#---------------------------------------------------

      - name: Gather VPC facts
        ec2_vpc_net_facts:
          region: "{{ aws_region }}"
          filters:
            "tag:Name": "{{ vpc_tag }}"
        register: vpc_facts

      # - debug: msg="{{ vpc_facts }}"

      - block:

#---------------------------------------------------
# Route Table
#---------------------------------------------------

          - name: Gather route table facts
            ec2_vpc_route_table_facts:
              region: "{{ aws_region }}"
              filters:
                vpc-id: "{{ vpc_facts.vpcs[0].vpc_id }}"
            register: vpc_route_table_facts

          - name: Remove route tables from VPC
            ec2_vpc_route_table:
              vpc_id: "{{ item.vpc_id }}"
              route_table_id: "{{ item.id }}"
              purge_routes: true
              purge_subnets: true
              region: "{{ aws_region }}"
              state: absent
              lookup: id
            with_items: "{{ vpc_route_table_facts.route_tables }}"
            ignore_errors: true

#---------------------------------------------------
# Subnet
#---------------------------------------------------

          - name: Remove subnets from VPC
            ec2_vpc_subnet:
              vpc_id: "{{ item.id }}"
              cidr: "{{ public_subnet_1_cidr }}"
              region: "{{ aws_region }}"
              state: absent
            with_items: "{{ vpc_facts.vpcs }}"

#---------------------------------------------------
# Gateway
#---------------------------------------------------

          - name: Remove internet gateway
            ec2_vpc_igw:
              vpc_id: "{{ item.id }}"
              region: "{{ aws_region }}"
              state: absent
            with_items: "{{ vpc_facts.vpcs }}"

#---------------------------------------------------
# VPC
#---------------------------------------------------

          - name: Delete VPC
            ec2_vpc_net:
              name: "{{ vpc_tag }}"
              cidr_block: "{{ vpc_cidr_block }}"
              region: "{{ aws_region }}"
              state: absent
            with_items: "{{ vpc_facts.vpcs }}"

        when: vpc_facts.vpcs|length>0

#---------------------------------------------------
# Route53
#---------------------------------------------------

      - name: Delete workstation route
        include: delete-route.yml zone={{ intranet }} record="workstation.{{ intranet }}" private_zone="true"

      - name: Delete node routes
        include: delete-route.yml zone={{ intranet }} record="server{{item}}.{{ intranet }}" private_zone="true"
        with_sequence: start=1 end=4
        ignore_errors: true

      - name: Get private DNS zone
        shell: aws route53 list-hosted-zones --query 'HostedZones[*]' --output text | grep '\/hostedzone\/.*{{ intranet }}' | sed -e 's/.*\///' -e 's/[^a-zA-Z0-9].*//'
        register: hosted_zone_id

      # - debug: var=hosted_zone_id.stdout_lines[0]

      - name: Delete private DNS zone
        shell: aws route53 delete-hosted-zone --id '{{ hosted_zone_id.stdout_lines[0] }}'
        when: hosted_zone_id.stdout_lines[0] is defined
